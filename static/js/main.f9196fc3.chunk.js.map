{"version":3,"sources":["images/Banner1.jpeg","pages/blog.tsx","pages/causes.tsx","pages/events.tsx","pages/girlupuniandes.tsx","pages/mentorship.tsx","pages/whoweare.tsx","pages/landing.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Blog","Button","variant","color","disabled","href","Causes","Events","GirlUp","Mentorship","WhoWeAre","ControlledCarousel","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","Item","className","src","Banner1","alt","Caption","Landing","theme","createMuiTheme","palette","secondary","main","App","ThemeProvider","path","exact","component","Whoweare","Girlupuniandes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9196fc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Banner1.4533ec49.jpeg\";","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nexport default function Blog() {\n  \n    return (\n      <div >\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n    );\n  }","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nexport default function Causes() {\n  \n    return (\n      <div >\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n    );\n  }","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nexport default function Events() {\n  \n    return (\n      <div >\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n    );\n  }","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nexport default function GirlUp() {\n  \n    return (\n      <div >\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n    );\n  }","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nexport default function Mentorship() {\n  \n    return (\n      <div >\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n    );\n  }","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\n\nexport default function WhoWeAre() {\n  \n    return (\n      <div >\n        <Button variant=\"contained\">Default</Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\">\n          Secondary\n        </Button>\n        <Button variant=\"contained\" disabled>\n          Disabled\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          Link\n        </Button>\n      </div>\n    );\n  }","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Carousel from 'react-bootstrap/Carousel'\nimport Banner1 from '../images/Banner1.jpeg';\n\nfunction ControlledCarousel() {\n    const [index, setIndex] = useState(0);\n  \n    const handleSelect = (selectedIndex: React.SetStateAction<number>, e: any) => {\n      setIndex(selectedIndex);\n    };\n  \n    return (\n      <Carousel activeIndex={index} onSelect={handleSelect}>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={Banner1}\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            \n            <p>Borre todo porque no funcionaba pero ya lo hago jaja</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        \n      </Carousel>\n    );\n  }\nexport default function Landing() {\n    return (\n      <div >\n        <ControlledCarousel />\n      </div>\n    );\n  }\n  ","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport Blog from './pages/blog';\nimport Causes from './pages/causes';\nimport Events from './pages/events';\nimport Girlupuniandes from './pages/girlupuniandes';\nimport Mentorship from './pages/mentorship';\nimport Whoweare from './pages/whoweare';\nimport Landing from './pages/landing';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#DA4A9A\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n        <div>\n          <Switch>\n          <ThemeProvider theme={theme}>\n            <Route path=\"/\"  exact component={Landing} />\n            <Route path=\"/causas\"  exact component={Causes} />\n            <Route path=\"/blog\" exact component={Blog} />\n            <Route path=\"/nosotras\" exact component={Whoweare} />\n            <Route path=\"/mentoria\" exact component={Mentorship} />\n            <Route path=\"/girlup\" exact component={Girlupuniandes} />\n            <Route path=\"/eventos\" exact component={Events} />\n            </ThemeProvider>\n          </Switch>\n        </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}